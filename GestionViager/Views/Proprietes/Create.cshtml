@model GestionViager.Models.Propriete

@{
    ViewBag.Title = "Create";

}


@{
    Layout = null;
}

@{

    var id = ViewData["id"];
    var affectation = ViewData["affectation"] as List<GestionViager.Models.affectation>;


}


<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>AdminLTE 2 | Simple Tables</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">

    <!-- daterange picker -->
    <link rel="stylesheet" href="/bower_components/bootstrap-daterangepicker/daterangepicker.css">
    <!-- bootstrap datepicker -->
    <link rel="stylesheet" href="/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
    <!-- Bootstrap 3.3.7 -->
    <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="/bower_components/font-awesome/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="/bower_components/Ionicons/css/ionicons.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="/dist/css/AdminLTE.min.css">
    <!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
    <link rel="stylesheet" href="/dist/css/skins/_all-skins.min.css">
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google Font -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
</head>

<body>


    @using (Html.BeginForm("Create", "Proprietes", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("Create", "Proprietes", new { id = 0 }) }))
    {
        @Html.AntiForgeryToken()

        <br /><br />
        <div class="row">


            <div class="col-md-6">

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.id_folder, new { htmlAttributes = new { @Value = id, @type = "hidden", @class = "form-control" } })

                    @Html.EditorFor(model => model.id, new { htmlAttributes = new { @Value = Model.id, @type = "hidden", @class = "form-control" } })


                    <div class="form-group">
                        @Html.LabelFor(model => model.add1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-xs-4">
                            @Html.EditorFor(model => model.add1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.add1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.add2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-xs-4">
                            @Html.EditorFor(model => model.add2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.add2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.add3, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-xs-4">
                            @Html.EditorFor(model => model.add3, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.add3, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.zip_Code, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-xs-4">
                            @Html.EditorFor(model => model.zip_Code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.zip_Code, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>


            <div class="col-md-6">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-xs-4">
                            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.region, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-xs-4">
                            @Html.EditorFor(model => model.region, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.region, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    @if (Model == null)
                {
                        <div class="form-group">
                            @Html.LabelFor(model => model.bien, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-xs-4">
                                @Html.DropDownListFor(model => model.bien, (SelectList)ViewData["bien"], "", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.bien, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }


                    else
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.bien, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-xs-4">
                                @Html.DropDownListFor(model => model.bien, (SelectList)ViewData["bien"], Model.bien, new { htmlAttributes = new { @class = "form-control col-xs-4" } })
                                @Html.ValidationMessageFor(model => model.bien, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.type, "type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-xs-4">
                            @Html.DropDownList("type", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    </div>
                </div>

        </div>

                    <div class="form-group">
                        <div class="col-md-10" style="text-align: center;">
                            <input type="submit" style="center" value="Create" class="btn btn-bitbucket" />
                        </div>
                    </div>
                
                }

    <hr />
               

                    <table class="table" border="2">
                        <CAPTION style="color:#205081"><strong> Affectations </strong></CAPTION>

                        <tr>

                            <th style="color:#5dade2">
                                Proprietaire
                            </th>
                            <th style="color:#5dade2">
                                Valeur attribuée
                            </th>

                        </tr>

                        @foreach (var item in affectation)
                        {
                            <tr>
                                <td>
                                    <input type="text" value="@item.fonds1.fonds1"/>   
                                </td>
                                <td>
                                    <input type="text" value="@item.value"/>   
                                   
                                </td>

                            </tr>
                        }

                    </table>

                
                <!-- jQuery 3 -->
                <script src="/bower_components/jquery/dist/jquery.min.js"></script>
                <!-- Bootstrap 3.3.7 -->
                <script src="/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>

                <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
                <!-- Select2 -->

                <link href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css" rel="stylesheet" />
                @Scripts.Render("~/bundles/jqueryval")

                <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>


</body>

</html>