
@model GestionViager.Models.tiersconjointModel


@{
    Layout = null;
}

@{
    ViewBag.Title = "Tiers";
}


@{
    // Since Address isn't a string, it requires a cast.
    var t1 = ViewData["tiers"] as GestionViager.Models.tiers;
    var t2 = ViewData["conjoint"] as GestionViager.Models.tiers;

    var esp = ViewData["esperance"];
    var id = ViewData["id"];
    var birth_tier = ViewData["naissanceTier"];

}

<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>AdminLTE 2 | Simple Tables</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">

    <!-- daterange picker -->
    <link rel="stylesheet" href="/bower_components/bootstrap-daterangepicker/daterangepicker.css">
    <!-- bootstrap datepicker -->
    <link rel="stylesheet" href="/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
    <!-- Bootstrap 3.3.7 -->
    <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="/bower_components/font-awesome/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="/bower_components/Ionicons/css/ionicons.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="/dist/css/AdminLTE.min.css">
    <!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
    <link rel="stylesheet" href="/dist/css/skins/_all-skins.min.css">
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google Font -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
</head>

<body>

    @using (Html.BeginForm("Save", "tiers", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("Save", "tiers", new { id = 0 }) }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.tiers.id)
        @Html.HiddenFor(model => model.conjoint.id)
        <div class="box box-info">
            <div class="row">

                <div class="col-md-6">




                    <div id="tiers">



                        <div class="box-header with-border">
                            <h3 class="box-title">Gestion Des Tiers</h3>
                        </div>
                        <!-- /.box-header -->
                        <!-- form start -->
                        <div class="form-horizontal">



                            @Html.EditorFor(model => model.tiers.id_folder, new { htmlAttributes = new { @Value = id, @type = "hidden", @class = "form-control" } })




                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="box-body">
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Prenom</label>
                                    <div class="col-xs-6">
                                        @Html.EditorFor(model => model.tiers.firstname, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Nom</label>
                                    <div class="col-xs-6">
                                        @Html.EditorFor(model => model.tiers.lastname, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.tiers.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-xs-4">
                                        @Html.DropDownListFor(model => model.tiers.gender, (SelectList)ViewData["sexe"], Model.tiers.gender, new { htmlAttributes = new { @class = "form-control col-xs-4" } })
                                        @Html.ValidationMessageFor(model => model.tiers.gender, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            

                                <div class="form-group">
                                    <label for="input" class="col-sm-2 control-label">Telephone</label>
                                            <div class="col-xs-6">
                                                <input type="tel" id="phoneTier" name="phone"  />
                                            </div>
                                </div>

                              
                               

                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Telephone2</label>
                                    <div class="col-xs-6">
                                        @Html.EditorFor(model => model.tiers.phone2, new {@pattern = @"^(?:0|\(?\+33\)?\s?|0033\s?)[1-79](?:[\.\-\s]?\d\d){4}$", htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>


                               @if (t1 != null)
                               {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.tiers.birth_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-xs-6">
                                        @Html.EditorFor(model => model.tiers.birth_date, new { htmlAttributes = new { @type = "date", @value = birth_tier, @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.tiers.birth_date, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                               }
                               else if (t1 == null)
                               {

                                <div class="form-group">
                                    @Html.LabelFor(model => model.tiers.birth_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-xs-6">
                                        @Html.EditorFor(model => model.tiers.birth_date, new { htmlAttributes = new { @type = "date",  @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.tiers.birth_date, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                               }
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Crédirentier</label>
                                    <div class="col-xs-6">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.tiers.credirentier)
                                            @Html.ValidationMessageFor(model => model.tiers.credirentier, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
    




                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Esperance Actuelle</label>

                                    <div class="col-xs-3">
                                        <strong style="color:	#8B0000">     @esp </strong>a la date <strong style="color:	#8B0000"> @DateTime.Now</strong>
                                    </div>
                                </div>

                            </div>
                            <!-- /.box-body -->
                            <div class="box-footer">
                                <button type="submit" class="btn btn-bitbucket pull-right">Save</button>
                            </div>
                            <!-- /.box-footer -->
                        </div>



                    </div>


                </div>








                <div id="conjoint">
                    <div class="form-horizontal">
                        <h4>Conjoint</h4>
                        <hr />

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <label for="inputEmail3" class="col-sm-2 control-label">Prenom</label>
                            <div class="col-xs-6">
                                @Html.EditorFor(model => model.conjoint.firstname, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="inputEmail3" class="col-sm-2 control-label">Nom</label>
                            <div class="col-xs-6">
                                @Html.EditorFor(model => model.conjoint.lastname, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.conjoint.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-xs-4">
                                @Html.DropDownListFor(model => model.conjoint.gender, (SelectList)ViewData["sexe"], Model.conjoint.gender, new { htmlAttributes = new { @class = "form-control col-xs-4" } })
                                @Html.ValidationMessageFor(model => model.conjoint.gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="inputEmail3" class="col-sm-2 control-label">Date de Naissance</label>
                            <div class="col-xs-6">
                                @Html.EditorFor(model => model.conjoint.birth_date, new { htmlAttributes = new { @type = "date", @class = "form-control pull-right" } })
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="inputEmail3" class="col-sm-2 control-label">Telephone</label>
                            <div class="col-xs-6">
                                @Html.EditorFor(model => model.conjoint.phone, new { @pattern = @"^(?:0|\(?\+33\)?\s?|0033\s?)[1-79](?:[\.\-\s]?\d\d){4}$", htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="inputEmail3" class="col-sm-2 control-label">Telephone 2 </label>
                            <div class="col-xs-6">
                                @Html.EditorFor(model => model.conjoint.phone2, new { @pattern =@"^(?:0|\(?\+33\)?\s?|0033\s?)[1-79](?:[\.\-\s]?\d\d){4}$", htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.conjoint.credirentier, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.conjoint.credirentier)
                                    @Html.ValidationMessageFor(model => model.conjoint.credirentier, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>




                    </div>
                </div>


            </div>

        </div>


        <div>
            <input id="affecter" value="Conjoint" class="btn btn-default" />
        </div>



    }


    
    
    <!-- jQuery 3 -->
    <script src="/bower_components/jquery/dist/jquery.min.js"></script>
    <!-- Bootstrap 3.3.7 -->
    <script src="/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>

    <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <!-- Select2 -->
   
    <link href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css" rel="stylesheet" />
        @Scripts.Render("~/bundles/jqueryval")

        <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>

    <script>

        
        //Date picker
       
        $('#datepicker').datepicker({


        })



        $('#datepicker2').datepicker({


        })
   

        $(document).ready(function () {

           
           
                $("#conjoint").hide(0);

                $("#affecter").click(function () {
                    $("#conjoint").addClass("col-md-6");
                    $("#conjoint").show();
                    $("#affecter").hide(0);

                });




            });
          
            

    </script>





</body>

</html>







